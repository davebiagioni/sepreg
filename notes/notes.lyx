#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass amsart
\use_default_options true
\begin_modules
theorems-ams
eqs-within-sections
figs-within-sections
\end_modules
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry true
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 1in
\topmargin 1in
\rightmargin 1in
\bottommargin 1in
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Section*
A sketch of the ALS algorithm for regression
\end_layout

\begin_layout Standard
We consider approximating the multivariate data
\begin_inset Formula 
\begin{equation}
D=\left\{ \left(\mathbf{x}_{j},y_{j}\right)\right\} _{j=1}^{N}=\left\{ \left(x_{1},x_{2},\dots,x_{d};y_{j}\right)\right\} _{j=1}^{N}\label{eq:data}
\end{equation}

\end_inset

 via a sum of separable functions,
\begin_inset Formula 
\begin{equation}
g(\mathbf{x})=\sum_{l=1}^{r}\sigma_{l}\prod_{i=1}^{d}g_{i}^{l}(x_{i}).\label{eq:seprep}
\end{equation}

\end_inset

To do this, we seek to minimize
\begin_inset Formula 
\begin{equation}
\left\Vert \left\{ \left(\mathbf{x}_{j},y_{j}\right)\right\} _{j=1}^{N}-g\right\Vert ^{2}=\sum_{j=1}^{N}\left(y_{j}-g(\mathbf{x}_{j})\right)^{2}.\label{eq:least-squares-error}
\end{equation}

\end_inset


\end_layout

\begin_layout Standard
We consider the case when each function 
\begin_inset Formula $g_{i}^{l}$
\end_inset

 is a linear combination of 
\begin_inset Formula $M_{i}^{l}$
\end_inset

 pre-selected basis functions 
\begin_inset Formula $\varphi_{i}^{l,k}(x_{i})$
\end_inset

, so that
\begin_inset Formula 
\begin{equation}
g_{i}^{l}=\sum_{k=1}^{M_{i}^{l}}c_{i}^{l,k}\varphi_{i}^{l,k}=\left(\boldsymbol{\Phi}_{i}^{l}\right)^{*}\mathbf{c}_{i}^{l},\label{eq:g_i^l}
\end{equation}

\end_inset

where we have defined the vectors
\begin_inset Formula 
\begin{equation}
\boldsymbol{\Phi}_{i}^{l}=\left[\begin{array}{c}
\varphi_{i}^{l,1}\\
\varphi_{i}^{l,2}\\
\vdots\\
\varphi_{i}^{l,M_{i}}
\end{array}\right],\,\,\,\,\,\,\mbox{and}\,\,\,\,\,\mathbf{c}_{i}^{l}=\left[\begin{array}{c}
c_{i}^{l,1}\\
c_{i}^{l,2}\\
\vdots\\
c_{i}^{l,M_{i}^{l}}
\end{array}\right],\,\,\,\,\, i=1,\dots,d,\,\,\,\, l=1,\dots,r\label{eq:Phi and c vectors}
\end{equation}

\end_inset

and 
\begin_inset Formula $\left(\cdot\right)^{*}$
\end_inset

 denotes transpose.
\end_layout

\begin_layout Standard
We describe the ALS iteration for an approximation of fixed rank 
\begin_inset Formula $r$
\end_inset

.
 First, without loss of generality, fix all directions except for 
\begin_inset Formula $i=1$
\end_inset

.
 Define the 
\begin_inset Formula $N\times r$
\end_inset

 matrix
\begin_inset Formula 
\begin{equation}
p_{j}^{l}=\sigma_{l}\prod_{i=2}^{d}g_{i}^{l}\left(x_{i}^{j}\right),\label{eq:p_j^l}
\end{equation}

\end_inset

where 
\begin_inset Formula $x_{i}^{j}$
\end_inset

 denotes the 
\begin_inset Formula $j$
\end_inset

-th value of variable 
\begin_inset Formula $x_{i}$
\end_inset

 (this matrix 
\begin_inset Quotes eld
\end_inset

collapses
\begin_inset Quotes erd
\end_inset

 all of the directions except 
\begin_inset Formula $i=1$
\end_inset

).
 Then the error (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:least-squares-error"

\end_inset

) may be written as
\begin_inset Formula 
\begin{equation}
\sum_{j=1}^{N}\left(y_{j}-g\left(\mathbf{x}_{j}\right)\right)^{2}=\sum_{j=1}^{N}\left(y_{j}-\sum_{l=1}^{r}p_{j}^{l}g_{1}^{l}\left(x_{1}^{j}\right)\right)^{2}=\sum_{j=1}^{N}\left(y_{j}-\sum_{l=1}^{r}p_{j}^{l}\sum_{k=1}^{M_{i}}c_{1}^{l,k}\varphi_{1}^{l,k}\left(x_{1}^{j}\right)\right)^{2}\label{eq:least square error fix all but dimension 1}
\end{equation}

\end_inset

with the last line following from substitution of (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:g_i^l"

\end_inset

).
 Setting to zero the gradient of (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:least square error fix all but dimension 1"

\end_inset

) with respect to the parameters 
\begin_inset Formula $c_{1}^{l,k}$
\end_inset

, we have 
\begin_inset Formula 
\begin{eqnarray}
\nabla_{c_{1}^{l,k}}\sum_{j=1}^{N}\left(y_{j}-\sum_{l=1}^{r}p_{j}^{l}\sum_{k=1}^{M_{1}^{l}}c_{1}^{l,k}\varphi_{1}^{l,k}\left(x_{1}^{j}\right)\right)^{2} & = & -2\sum_{j=1}^{N}\left(y_{j}-\sum_{l=1}^{r}p_{j}^{l}\sum_{k=1}^{M_{1}^{l}}c_{1}^{l,k}\varphi_{1}^{l,k}\left(x_{1}^{j}\right)\right)\left(p_{j}^{l'}\varphi_{1}^{l',k'}\left(x_{1}^{j}\right)\right)=0\nonumber \\
 & \Downarrow\nonumber \\
\sum_{j=1}^{N}y_{j}p_{j}^{l'}\varphi_{1}^{l',k'}\left(x_{1}^{j}\right) & = & \sum_{j=1}^{N}\sum_{l=1}^{r}\sum_{k=1}^{M_{1}^{l}}p_{j}^{l'}\varphi_{1}^{l',k'}\left(x_{1}^{j}\right)p_{j}^{l}\varphi_{1}^{l,k}\left(x_{1}^{j}\right)c_{1}^{l,k}.\label{eq:least-squares-system-full-glory}
\end{eqnarray}

\end_inset

Although it may not be obvious at first glance, the linear system for finding
 the parameters 
\begin_inset Formula $c_{1}^{l,k}$
\end_inset

 in (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:least-squares-system-full-glory"

\end_inset

) appears in a block form.
 To see this, define the 
\begin_inset Formula $N$
\end_inset

-vector 
\begin_inset Formula 
\begin{equation}
\mathbf{p}^{l}=\left[\begin{array}{c}
p_{1}^{l}\\
p_{2}^{l}\\
\vdots\\
p_{N}^{l}
\end{array}\right],\label{eq:p vector}
\end{equation}

\end_inset

the 
\begin_inset Formula $N\times M_{1}^{l}$
\end_inset

 matrix
\begin_inset Formula 
\begin{equation}
\mathbf{P}^{l}=\left[\begin{array}{cccc}
| & | &  & |\\
\mathbf{p}^{l} & \mathbf{p}^{l} & \cdots & \mathbf{p}^{l}\\
| & | &  & |
\end{array}\right],\label{eq:p matrix repmat}
\end{equation}

\end_inset

and the 
\begin_inset Formula $N\times r$
\end_inset

 matrices
\begin_inset Formula 
\begin{equation}
\boldsymbol{\Phi}_{1}^{l}\left(x_{1}^{j}\right)=\left[\begin{array}{cccc}
\varphi_{1}^{l,1}\left(x_{1}^{1}\right) & \varphi_{1}^{l,2}\left(x_{1}^{1}\right) & \cdots & \varphi_{1}^{l,M_{1}^{l}}\left(x_{1}^{1}\right)\\
\varphi_{1}^{l,1}\left(x_{1}^{2}\right) & \varphi_{1}^{l,2}\left(x_{1}^{2}\right) & \cdots & \varphi_{1}^{l,M_{1}^{l}}\left(x_{1}^{2}\right)\\
\vdots & \vdots & \ddots & \vdots\\
\varphi_{1}^{l,1}\left(x_{1}^{N}\right) & \varphi_{1}^{l,2}\left(x_{1}^{N}\right) & \cdots & \varphi_{1}^{l,M_{1}^{l}}\left(x_{1}^{N}\right)
\end{array}\right],\,\,\,\,\,\,\,\, l=1,\dots,r.\label{eq:Phimat of x_1^j}
\end{equation}

\end_inset

Then one can verify that (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:least-squares-system-full-glory"

\end_inset

) may be expressed by 
\begin_inset Formula 
\begin{equation}
\mathbf{A}\mathbf{c}=\mathbf{b},\label{eq:linear system}
\end{equation}

\end_inset

where the 
\begin_inset Formula $M_{1}^{l}\times M_{1}^{l}$
\end_inset

 blocks of 
\begin_inset Formula $\mathbf{A}$
\end_inset

 are given by
\begin_inset Formula 
\begin{eqnarray}
A(l,l') & = & \left\langle \mathbf{P}^{l}\odot\boldsymbol{\Phi}_{1}^{l}\left(x_{1}^{j}\right),\mathbf{P}^{l'}\odot\boldsymbol{\Phi}_{1}^{l'}\left(x_{1}^{j}\right)\right\rangle \label{eq:a blocks}
\end{eqnarray}

\end_inset

and the 
\begin_inset Formula $M_{1}^{l}$
\end_inset

 blocks of 
\begin_inset Formula $\mathbf{b}$
\end_inset

 are given by
\begin_inset Formula 
\begin{equation}
b(l)=\left\langle \mathbf{P}^{l}\odot\boldsymbol{\Phi}_{1}^{l}\left(x_{1}^{j}\right),\mathbf{y}\right\rangle .\label{eq:b blocks}
\end{equation}

\end_inset

Here we have used the symbol 
\begin_inset Formula $\odot$
\end_inset

 to express the Hadamard (pointwise) product.
 In other words, we have
\begin_inset Formula 
\begin{equation}
\mathbf{A}=\left[\begin{array}{c|c|c|c}
A(1,1) & A(1,2) & \cdots & A(1,r)\\
\hline A(2,1) & A(2,2) & \cdots & A(2,r)\\
\hline \vdots & \vdots & \ddots & \vdots\\
\hline A(r,1) & A(r,2) & \cdots & A(r,r)
\end{array}\right],\,\,\,\,\,\,\mathbf{b}=\left[\begin{array}{c}
b(1)\\
\hline b(2)\\
\hline \vdots\\
\hline b(r)
\end{array}\right],\label{eq:a and b blocks}
\end{equation}

\end_inset

and we solve (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:linear system"

\end_inset

) for 
\begin_inset Formula 
\begin{equation}
\mathbf{c}=\left[\begin{array}{c}
\mathbf{c}_{1}^{1}\\
\hline \mathbf{c}_{1}^{2}\\
\hline \vdots\\
\hline \mathbf{c}_{1}^{r}
\end{array}\right],\label{eq:c blocks}
\end{equation}

\end_inset

and normalize to obtain the new 
\begin_inset Formula $s$
\end_inset

-values.
 We remark that the matrix 
\begin_inset Formula $\mathbf{A}$
\end_inset

 is symmetric, and the method used for solving the system (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:linear system"

\end_inset

) can exploit this.
\end_layout

\begin_layout Remark*
The linear system (
\begin_inset CommandInset ref
LatexCommand ref
reference "eq:linear system"

\end_inset

) represents the normal equations for the coefficients 
\begin_inset Formula $\mathbf{c}$
\end_inset

.
 In practice, forming this system explicitly is ill advised.
 One should instead solve the 
\begin_inset Formula $(rN)\times(rM_{1}^{l})$
\end_inset

 rectangular system with blocks,
\begin_inset Formula 
\[
\left(\mathbf{P}^{l}\odot\boldsymbol{\Phi}_{1}^{l}(x_{1}^{j})\right)\mathbf{c}=\mathbf{y},\,\,\,\,\,\, l=1,\dots r.
\]

\end_inset


\end_layout

\begin_layout Standard
The above procedure is performed for each direction in turn, for a fixed
 separation rank, until:
\end_layout

\begin_layout Itemize
the iteration converges,
\end_layout

\begin_layout Itemize
the iteration stalls, or
\end_layout

\begin_layout Itemize
the maximum number of iterations is reached.
\end_layout

\begin_layout Standard
If the algorithm does not converge, one may either re-start it with a new
 initial guess, or increase the separation rank and perform ALS again.
\end_layout

\end_body
\end_document
